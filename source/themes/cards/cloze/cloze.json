{
  "★ Title": "A <code>method<\/code> and a <code>function<\/code> are missing here. What are they?",


  "☆ Subtitle": "for loops, strings, lists",


  "☆ Syntax (inline code)": "",


  "★ Key point (code block or image)": "<div class=\"codehilite\"><pre><span class=\"k\">def<\/span> <span class=\"nf\">censor<\/span><span class=\"p\">(<\/span><span class=\"n\">text<\/span><span class=\"p\">,<\/span> <span class=\"n\">word<\/span><span class=\"p\">):<\/span>\r\n    <span class=\"n\">text<\/span> <span class=\"o\">=<\/span> {{c1::text.split()}}  <span class=\"c1\"># Convert to list<\/span>\r\n    <span class=\"n\">word_length<\/span> <span class=\"o\">=<\/span> <span class=\"nb\">len<\/span><span class=\"p\">(<\/span><span class=\"n\">word<\/span><span class=\"p\">)<\/span>  <span class=\"c1\"># For our ****<\/span>\r\n\r\n    <span class=\"k\">for<\/span> <span class=\"n\">i<\/span><span class=\"p\">,<\/span> <span class=\"n\">item<\/span> <span class=\"ow\">in<\/span> {{c1::enumerate(text)}}<span class=\"p\">:<\/span>\r\n        <span class=\"k\">if<\/span> <span class=\"n\">item<\/span> <span class=\"o\">==<\/span> <span class=\"n\">word<\/span><span class=\"p\">:<\/span>\r\n            <span class=\"n\">asterix<\/span> <span class=\"o\">=<\/span> <span class=\"s\">'*'<\/span> <span class=\"o\">*<\/span> <span class=\"n\">word_length<\/span>\r\n            <span class=\"n\">text<\/span><span class=\"p\">[<\/span><span class=\"n\">i<\/span><span class=\"p\">]<\/span> <span class=\"o\">=<\/span> <span class=\"n\">asterix<\/span>\r\n            <span class=\"k\">print<\/span><span class=\"p\">(<\/span><span class=\"s\">\"{} yup! '{}' is the same as '{}'\"<\/span><span class=\"o\">.<\/span><span class=\"n\">format<\/span><span class=\"p\">(<\/span><span class=\"n\">i<\/span><span class=\"p\">,<\/span> <span class=\"n\">item<\/span><span class=\"p\">,<\/span> <span class=\"n\">word<\/span><span class=\"p\">))<\/span>\r\n            <span class=\"k\">print<\/span><span class=\"p\">(<\/span><span class=\"s\">'Replacing {} with {}'<\/span><span class=\"o\">.<\/span><span class=\"n\">format<\/span><span class=\"p\">(<\/span><span class=\"n\">i<\/span><span class=\"p\">,<\/span> <span class=\"n\">asterix<\/span><span class=\"p\">))<\/span>\r\n        <span class=\"k\">else<\/span><span class=\"p\">:<\/span>\r\n            <span class=\"k\">print<\/span><span class=\"p\">(<\/span><span class=\"s\">'{} is not {}'<\/span><span class=\"o\">.<\/span><span class=\"n\">format<\/span><span class=\"p\">(<\/span><span class=\"n\">i<\/span><span class=\"p\">,<\/span> <span class=\"n\">word<\/span><span class=\"p\">))<\/span>\r\n\r\n    <span class=\"k\">return<\/span> <span class=\"s\">' '<\/span><span class=\"o\">.<\/span><span class=\"n\">join<\/span><span class=\"p\">(<\/span><span class=\"n\">text<\/span><span class=\"p\">)<\/span>\r\n\r\n\r\n<span class=\"k\">print<\/span><span class=\"p\">(<\/span><span class=\"n\">censor<\/span><span class=\"p\">(<\/span><span class=\"s\">'this is a sentence'<\/span><span class=\"p\">,<\/span> <span class=\"s\">'sentence'<\/span><span class=\"p\">))<\/span><\/pre><\/div>",


  "★ Key point notes": "<ol><li align=\"left\"><code>split()<\/code>&nbsp;converts a&nbsp;<code>string<\/code>&nbsp;to a&nbsp;<code>[]<\/code><\/li><li align=\"left\"><code>enumerate()<\/code>&nbsp;allows us to return the index of a list<\/li><\/ol><p>Another, surprisingly simple method to achieve this is with&nbsp;<code>.replace()<\/code>&nbsp;method:<\/p><div class=\"codehilite\"><pre><span class=\"k\">def<\/span> <span class=\"nf\">censor<\/span><span class=\"p\">(<\/span><span class=\"n\">text<\/span><span class=\"p\">,<\/span> <span class=\"n\">word<\/span><span class=\"p\">):<\/span>\r\n           <span class=\"k\">return<\/span> <span class=\"n\">text<\/span><span class=\"o\">.<\/span><span class=\"n\">replace<\/span><span class=\"p\">(<\/span><span class=\"n\">word<\/span><span class=\"p\">,<\/span> <span class=\"s\">'@'<\/span> <span class=\"o\">*<\/span> <span class=\"nb\">len<\/span><span class=\"p\">(<\/span><span class=\"n\">word<\/span><span class=\"p\">))<\/span>\r\n<\/pre><\/div><blockquote><p>Uhm, it's really nice, but this will replace parts of a word too. So 'gnopg nop foo ' with 'nop' will become 'g@@g @@ foo' \u2014&nbsp;<a href=\"http:\/\/bit.ly\/2e0SwLl\">see more<\/a><\/p><\/blockquote>",


  "✎ Other notes": "This assumes that all letters are lowercase (<code>split()<\/code> by default seperates by whitespace). See other methods of <a href=\"http:\/\/treyhunner.com\/2016\/04\/how-to-loop-with-indexes-in-python\/\">accessing the index within the loop<\/a> (such as <code>range(len(our_list))<\/code>)",


  "✎ Markdown": false
}
